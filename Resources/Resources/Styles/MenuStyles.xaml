<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="PresentationOptions">

	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="TabControlOuterBorder" Color="#FF121011"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="TabControlInnerBorder" Color="#FF5c5e5b"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuForeground" Color="#FF333333"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuHighlightForeground" Color="White"/>
    <SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuBackground" Color="White"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuBorder" Color="#FFD0D0D0"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuItemIconBackground" Color="White" />
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="OutherMenuBorderHover" Color="Transparent"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuBorderHover" Color="SlateGray"/>
    <SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuBackgroundHover" Color="{DynamicResource BaseColor0}" />
    <SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuBarBackground" Color="#FF5A5A5A"/>
	<SolidColorBrush PresentationOptions:Freeze="True" x:Key="MenuRootBackgroundHover" Color="#FDDD" Opacity="0"/>
    
    <LinearGradientBrush PresentationOptions:Freeze="True" x:Key="MenuBorderBrush" StartPoint="0.6,0" EndPoint="1,1">
        <GradientStop Color="#DDD" Offset="0"/>
        <GradientStop Color="#888" Offset="1"/>
    </LinearGradientBrush>
    
	<LinearGradientBrush PresentationOptions:Freeze="True" x:Key="MenuRootBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="#FF222222" Offset="0"/>
		<GradientStop Color="#FF666666" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush PresentationOptions:Freeze="True" x:Key="MenuRootSelectedBrush" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="#FF333333" Offset="0"/>
		<GradientStop Color="#FF666666" Offset="1"/>
	</LinearGradientBrush>

	<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>


	<Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<!--<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>-->
		<!--<Setter Property="FontSize" Value="{DynamicResource NormalFontSize}"/>-->
		<Setter Property="Height" Value="22"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border 
						Background="{StaticResource MenuBarBackground}"
						BorderBrush="{StaticResource MenuBorder}"
						BorderThickness="0,0,0,1">
						<StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" Margin="0,1,0,0"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}" BasedOn="{StaticResource MenuStyle}" />


    <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
		<Setter Property="HasDropShadow" Value="False"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="{StaticResource MenuBackground}"/>
		<!--<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>-->
		<!--<Setter Property="FontSize" Value="{DynamicResource NormalFontSize}"/>-->
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Grid Margin="0,0,5,5">
						<Border PresentationOptions:Freeze="True" Background="{DynamicResource MenuBackground}" CornerRadius="0" BorderBrush="{DynamicResource MenuBorderBrush}" 
								BorderThickness="1" Padding="{TemplateBinding Padding}">
							<Border.Effect>
								<DropShadowEffect ShadowDepth="4" BlurRadius="4" RenderingBias="Performance" Opacity="0.3" Direction="300"/>
							</Border.Effect>
						</Border>
						<Grid SnapsToDevicePixels="True">
							<Rectangle HorizontalAlignment="Left" Margin="2" Width="27" RadiusX="0" RadiusY="0" Fill="{DynamicResource MenuItemIconBackground}"/>
							<Rectangle HorizontalAlignment="Left" Margin="29,2,0,2" Width="1" Fill="#FEEE"/>
							<Rectangle HorizontalAlignment="Left" Margin="30,2,0,2" Width="1" Fill="#FFF" Opacity="0.8"/>
							<ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
							</ScrollViewer>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ContextMenuStyle}" />

    <!-- Menu selection 1 -->

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" 
					   StrokeThickness="0" RadiusX="0" RadiusY="0"/>
			<Rectangle Margin="1" x:Name="InnerBorder" RadiusX="0" RadiusY="0"/>
			<Grid TextBlock.Foreground="{StaticResource MenuForeground}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="4"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="1"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="17"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border VerticalAlignment="Center" Visibility="Hidden" Margin="1" x:Name="GlyphPanel" Width="18" Height="18" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
					<Path FlowDirection="LeftToRight" x:Name="Glyph" Width="9" Height="11" Fill="#FF333333" Data="{StaticResource Checkmark}"/>
				</Border>
				<ContentPresenter VerticalAlignment="Center" x:Name="MenuItemContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5,0,0,0" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock VerticalAlignment="Center" x:Name="MenuItemText" Margin="5,2" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuBackgroundHover}"/>
				<Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuBorderHover}"/>
				<Setter Property="Stroke" TargetName="InnerBorder" Value="{StaticResource OutherMenuBorderHover}"/>
				<Setter Property="Foreground" TargetName="MenuItemText" Value="{DynamicResource MenuHighlightForeground}"/>
				<Setter Property="TextBlock.Foreground" TargetName="MenuItemContentPresenter" Value="{DynamicResource MenuHighlightForeground}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="#FEEE"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FDDD"/>
				<Setter Property="Fill" TargetName="Glyph" Value="#888"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- Popup menu -->
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
		<Grid Margin="0,0,5,5">
			<Border PresentationOptions:Freeze="True" Background="{DynamicResource MenuBackground}" CornerRadius="0" BorderBrush="{DynamicResource MenuBorderBrush}" 
					BorderThickness="1">
				<Border.Effect>
					<DropShadowEffect ShadowDepth="4" BlurRadius="4" RenderingBias="Performance" Opacity="0.3" Direction="300"/>
				</Border.Effect>
			</Border>
			<Grid SnapsToDevicePixels="True">
				<Rectangle HorizontalAlignment="Left" Margin="2" Width="27" RadiusX="0" RadiusY="0" Fill="{DynamicResource MenuItemIconBackground}"/>
				<Rectangle HorizontalAlignment="Left" Margin="29,2,0,2" Width="1" Fill="#FEEE"/>
				<Rectangle HorizontalAlignment="Left" Margin="30,2,0,2" Width="1" Fill="#FFF" Opacity="0.8"/>
				<ContentPresenter Margin="1" Grid.ColumnSpan="2" />
			</Grid>
		</Grid>
	</ControlTemplate>

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
	<Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<DockPanel SnapsToDevicePixels="true" Background="Transparent">
						<Rectangle x:Name="R1" Width="1" Fill="Transparent" DockPanel.Dock="Right"/>
						<Rectangle x:Name="B1" Height="1" Fill="Transparent" DockPanel.Dock="Bottom"/>
						<Rectangle x:Name="L1" Width="1" Fill="Transparent" DockPanel.Dock="Left"/>
						<Rectangle x:Name="T1" Height="1" Fill="Transparent" DockPanel.Dock="Top"/>
						<ContentPresenter HorizontalAlignment="Center" Margin="2,2,2,2" x:Name="ContentContainer" VerticalAlignment="Center"/>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="R1" Value="#FEEE"/>
							<Setter Property="Fill" TargetName="B1" Value="#FEEE"/>
							<Setter Property="Fill" TargetName="L1" Value="#AAA"/>
							<Setter Property="Fill" TargetName="T1" Value="#AAA"/>
							<Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Column="0" Grid.Row="1">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton Focusable="false" Style="{DynamicResource MenuScrollButton}" Grid.Column="0" Grid.Row="0" Command="{x:Static ScrollBar.LineUpCommand}">
							<!-- CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">-->
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="Black" Data="{StaticResource UpArrow}"/>
						</RepeatButton>
						<RepeatButton Focusable="false" Style="{DynamicResource MenuScrollButton}" Grid.Column="0" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}">
							<!-- CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">-->
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="Black" Data="{StaticResource DownArrow}"/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#28707070" Offset="0"/>
		<GradientStop Color="#50707070" Offset="0.75"/>
		<GradientStop Color="#90707070" Offset="1"/>
	</LinearGradientBrush>

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid Name="grid" SnapsToDevicePixels="true" Background="Transparent" TextBlock.Foreground="Gainsboro">
			<Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0" Margin="1,0,0,0" />
			<Rectangle x:Name="InnerBorder" RadiusX="0" RadiusY="0" Margin="2,1,1,1"/>
			<DockPanel Background="Transparent" Margin="2,0">
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
				<Path Visibility="Collapsed" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource Checkmark}"/>
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"/>
			</DockPanel>
			<Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="0" 
				   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" 
				   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
				   VerticalOffset="2" x:Name="PART_Popup">
				<ContentControl IsTabStop="false" x:Name="SubMenuBorder" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
					<ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
					</ScrollViewer>
				</ContentControl>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Fill" TargetName="OuterBorder" Value="{StaticResource MenuRootSelectedBrush}"/>
				<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource MenuRootBorderBrush}"/>
				<Setter Property="TextBlock.Foreground" Value="White" TargetName="grid"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
			</Trigger>
			<Trigger Property="IsSubmenuOpen" Value="true">
				<Setter Property="Margin" TargetName="OuterBorder" Value="1,0,0,0"/>
				<Setter Property="Fill" TargetName="OuterBorder" Value="{StaticResource MenuRootSelectedBrush}"/>
				<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource MenuRootBorderBrush}"/>
				<Setter Property="TextBlock.Foreground" Value="White" TargetName="grid"/>
				<Setter Property="Opacity" TargetName="OuterBorder" Value="1"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="TextBlock.Foreground" Value="Gray" TargetName="grid"/>
				<Setter Property="Fill" TargetName="GlyphPanel" Value="#888"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid Name="grid" SnapsToDevicePixels="true" TextBlock.Foreground="Gainsboro">
			<Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0" Margin="1,0,0,0"/>
			<Rectangle x:Name="InnerBorder" RadiusX="0" RadiusY="0" Margin="2,1,1,1"/>
			<DockPanel Background="Transparent">
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
				<Path Visibility="Collapsed" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource Checkmark}"/>
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"/>
			</DockPanel>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource MenuRootBorderBrush}"/>
				<Setter Property="Fill" TargetName="OuterBorder" Value="{StaticResource MenuRootSelectedBrush}"/>
				<Setter Property="TextBlock.Foreground" Value="White" TargetName="grid"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
				<Setter Property="Fill" TargetName="GlyphPanel" Value="#888"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

	<!-- Menu selection 2 -->

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true" TextBlock.Foreground="{StaticResource MenuForeground}">
			<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" 
					   Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0" RadiusX="0" RadiusY="0"/>
			<Rectangle Margin="1" x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="4"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="1"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="17"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border Visibility="Hidden" Margin="1" x:Name="GlyphPanel" Width="18" Height="18" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
					<Path FlowDirection="LeftToRight" x:Name="Glyph" Width="9" Height="11" Fill="#FF333333" Data="{StaticResource Checkmark}"/>
				</Border>
				<ContentPresenter x:Name="MenuItemContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5,2" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"/>
				<TextBlock x:Name="MenuItemText" Visibility="Collapsed" Margin="5,2" Grid.Column="4" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
				<Path x:Name="Arrow" Margin="4,0,0,0" VerticalAlignment="Center" Fill="#FF333333" Grid.Column="5" Data="{StaticResource RightArrow}"/>
			</Grid>
			<Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="-2" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" 
				   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
				   VerticalOffset="-3" x:Name="PART_Popup">
				<!--<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">-->
				<ContentControl IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}" x:Name="SubMenuBorder">
					<ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
					</ScrollViewer>
				</ContentControl>
				<!--</Microsoft_Windows_Themes:SystemDropShadowChrome>-->
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Stroke" TargetName="InnerBorder" Value="#D1EEEEEE"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>-->
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuBackgroundHover}"/>
				<Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuBorderHover}"/>
				<Setter Property="Stroke" TargetName="InnerBorder" Value="{StaticResource OutherMenuBorderHover}"/>
				<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MenuHighlightForeground}"/>
				<Setter Property="Foreground" TargetName="MenuItemText" Value="{DynamicResource MenuHighlightForeground}"/>
				<Setter Property="TextBlock.Foreground" TargetName="MenuItemContentPresenter" Value="{DynamicResource MenuHighlightForeground}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="#FEEE"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FDDD"/>
				<Setter Property="Fill" TargetName="Glyph" Value="#888"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="MenuItemBase" TargetType="{x:Type MenuItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Padding" Value="9,2,10,3"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Padding" Value="9,2,10,3"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Padding" Value="2,3,2,3"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Padding" Value="2,3,2,3"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemBase}" />

	<Style x:Key="AnimatedExpanderContentStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemBase}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Height" Value="20" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="Black"/>
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="{x:Static controls:MenuItem.SeparatorStyleKey}" TargetType="Separator">
		<Setter Property="Margin" Value="30,4,0,4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<StackPanel Width="{TemplateBinding Width}">
						<Rectangle Opacity="0.1" Fill="Black" Height="1"/>
						<Rectangle Opacity="0.9" Fill="White" Height="1"/>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>